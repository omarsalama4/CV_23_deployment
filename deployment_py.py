# -*- coding: utf-8 -*-
"""deployment.py

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1TP-uK_GwZ7pZ58IhVioxCKrBS7bWrsAn
"""

import requests
from streamlit_lottie import st_lottie
from PIL import Image
import tensorflow as tf
import numpy as np
import streamlit as st

model = tf.keras.applications.VGG16(weights='imagenet')

def preprocess_image(image):
    image = image.resize((224, 224))
    image = np.array(image) / 255.0
    image = np.expand_dims(image, axis=0)
    return image
def load_lottie(url):
    r = requests.get(url)
    if r.status_code != 200:
        return None
    return r.json()

def resize_uploaded_image(uploaded_image, size=(200, 200)):
    return uploaded_image.resize(size)
def main():
    col1, col2, col3 = st.columns(3)

    with col1:
     st.write(' ')

    with col2:
      image_1 = Image.open('ApplAi_Logo-1.png')
      new_image = image_1.resize((200, 200))
      st.image(new_image)

    with col3:
      st.write(' ')

    st.title("Brain Tumor Detection App")

    with st.form(key="form1"):
        left_column, right_column = st.columns(2)

        with left_column:
            name = st.text_input(label="Enter your name")
            submit_name = st.form_submit_button(label="Submit your name")

        with right_column:
            uploaded_image = st.file_uploader("Choose an image...", type=["jpg", "png", "jpeg"])

    classify_button = st.button("Classify")
    if submit_name:
        if name:
            st.write(f"Hello, {name}!")

    if classify_button and uploaded_image is not None:
        # Load and display the uploaded image
        uploaded_image_pil = Image.open(uploaded_image)
        resized_image = resize_uploaded_image(uploaded_image_pil, size=(300, 300))
        st.image(resized_image, caption="Brain MRI")

        # Preprocess the uploaded image
        input_data = preprocess_image(uploaded_image_pil)

        # Make predictions
        predictions = model.predict(input_data)


        st.write("Result:")
        if predictions[0][1] > 0.5:
          st.write("You have a brain tumor. Please consult a healthcare professional.")
        else:
          st.write(f"Congratulations {name} you don't have a brain tumor.")
    else:
            st.write("Please write your name and upload an image to classify.")

if __name__ == "__main__":
    main()